// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// aracnee
SEXP aracnee(SEXP Rmim, SEXP Rsize, SEXP Re);
RcppExport SEXP _Test1_aracnee(SEXP RmimSEXP, SEXP RsizeSEXP, SEXP ReSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Rmim(RmimSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Rsize(RsizeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Re(ReSEXP);
    rcpp_result_gen = Rcpp::wrap(aracnee(Rmim, Rsize, Re));
    return rcpp_result_gen;
END_RCPP
}
// clr_scribe
NumericMatrix clr_scribe(NumericMatrix x);
RcppExport SEXP _Test1_clr_scribe(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(clr_scribe(x));
    return rcpp_result_gen;
END_RCPP
}
// clrr
SEXP clrr(SEXP Rmim, SEXP Rsize, SEXP RskipDiagonal);
RcppExport SEXP _Test1_clrr(SEXP RmimSEXP, SEXP RsizeSEXP, SEXP RskipDiagonalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Rmim(RmimSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Rsize(RsizeSEXP);
    Rcpp::traits::input_parameter< SEXP >::type RskipDiagonal(RskipDiagonalSEXP);
    rcpp_result_gen = Rcpp::wrap(clrr(Rmim, Rsize, RskipDiagonal));
    return rcpp_result_gen;
END_RCPP
}
// kde_cpp
NumericMatrix kde_cpp(NumericMatrix data, int k, int b, int pdf, int density_sample_type);
RcppExport SEXP _Test1_kde_cpp(SEXP dataSEXP, SEXP kSEXP, SEXP bSEXP, SEXP pdfSEXP, SEXP density_sample_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type pdf(pdfSEXP);
    Rcpp::traits::input_parameter< int >::type density_sample_type(density_sample_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(kde_cpp(data, k, b, pdf, density_sample_type));
    return rcpp_result_gen;
END_RCPP
}
// kde
NumericMatrix kde(SEXP data, SEXP k, SEXP b, SEXP pdf, SEXP density_sample_type);
RcppExport SEXP _Test1_kde(SEXP dataSEXP, SEXP kSEXP, SEXP bSEXP, SEXP pdfSEXP, SEXP density_sample_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type data(dataSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    Rcpp::traits::input_parameter< SEXP >::type b(bSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pdf(pdfSEXP);
    Rcpp::traits::input_parameter< SEXP >::type density_sample_type(density_sample_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(kde(data, k, b, pdf, density_sample_type));
    return rcpp_result_gen;
END_RCPP
}
// knn_density
List knn_density(SEXP x, SEXP y, SEXP k);
RcppExport SEXP _Test1_knn_density(SEXP xSEXP, SEXP ySEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(knn_density(x, y, k));
    return rcpp_result_gen;
END_RCPP
}
// knn_density_2d
NumericMatrix knn_density_2d(SEXP x, SEXP y, SEXP nGrids, SEXP k);
RcppExport SEXP _Test1_knn_density_2d(SEXP xSEXP, SEXP ySEXP, SEXP nGridsSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type nGrids(nGridsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(knn_density_2d(x, y, nGrids, k));
    return rcpp_result_gen;
END_RCPP
}
// digamma_0
double digamma_0(double x);
RcppExport SEXP _Test1_digamma_0(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(digamma_0(x));
    return rcpp_result_gen;
END_RCPP
}
// vd
double vd(SEXP d);
RcppExport SEXP _Test1_vd(SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(vd(d));
    return rcpp_result_gen;
END_RCPP
}
// entropy
double entropy(SEXP x, SEXP k);
RcppExport SEXP _Test1_entropy(SEXP xSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(entropy(x, k));
    return rcpp_result_gen;
END_RCPP
}
// mi
double mi(SEXP x, SEXP y, SEXP k, SEXP normalize);
RcppExport SEXP _Test1_mi(SEXP xSEXP, SEXP ySEXP, SEXP kSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    Rcpp::traits::input_parameter< SEXP >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mi(x, y, k, normalize));
    return rcpp_result_gen;
END_RCPP
}
// cmi
List cmi(SEXP x, SEXP y, SEXP z, SEXP k, SEXP normalize);
RcppExport SEXP _Test1_cmi(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP kSEXP, SEXP normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type z(zSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    Rcpp::traits::input_parameter< SEXP >::type normalize(normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cmi(x, y, z, k, normalize));
    return rcpp_result_gen;
END_RCPP
}
// ucmi_cpp
List ucmi_cpp(const NumericMatrix& x, const NumericMatrix& y, NumericMatrix z, int k, int method, int k_density, double bw);
RcppExport SEXP _Test1_ucmi_cpp(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP kSEXP, SEXP methodSEXP, SEXP k_densitySEXP, SEXP bwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type k_density(k_densitySEXP);
    Rcpp::traits::input_parameter< double >::type bw(bwSEXP);
    rcpp_result_gen = Rcpp::wrap(ucmi_cpp(x, y, z, k, method, k_density, bw));
    return rcpp_result_gen;
END_RCPP
}
// ucmi
List ucmi(SEXP x, SEXP y, SEXP z, SEXP k, SEXP method, SEXP k_density, SEXP bw);
RcppExport SEXP _Test1_ucmi(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP kSEXP, SEXP methodSEXP, SEXP k_densitySEXP, SEXP bwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type z(zSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    Rcpp::traits::input_parameter< SEXP >::type method(methodSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k_density(k_densitySEXP);
    Rcpp::traits::input_parameter< SEXP >::type bw(bwSEXP);
    rcpp_result_gen = Rcpp::wrap(ucmi(x, y, z, k, method, k_density, bw));
    return rcpp_result_gen;
END_RCPP
}
// umi_cpp
double umi_cpp(const NumericMatrix& x, const NumericMatrix& y, int k, int method, int k_density, double bw);
RcppExport SEXP _Test1_umi_cpp(SEXP xSEXP, SEXP ySEXP, SEXP kSEXP, SEXP methodSEXP, SEXP k_densitySEXP, SEXP bwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type k_density(k_densitySEXP);
    Rcpp::traits::input_parameter< double >::type bw(bwSEXP);
    rcpp_result_gen = Rcpp::wrap(umi_cpp(x, y, k, method, k_density, bw));
    return rcpp_result_gen;
END_RCPP
}
// umi
double umi(SEXP x, SEXP y, SEXP k, SEXP method, SEXP k_density, SEXP bw);
RcppExport SEXP _Test1_umi(SEXP xSEXP, SEXP ySEXP, SEXP kSEXP, SEXP methodSEXP, SEXP k_densitySEXP, SEXP bwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    Rcpp::traits::input_parameter< SEXP >::type method(methodSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k_density(k_densitySEXP);
    Rcpp::traits::input_parameter< SEXP >::type bw(bwSEXP);
    rcpp_result_gen = Rcpp::wrap(umi(x, y, k, method, k_density, bw));
    return rcpp_result_gen;
END_RCPP
}
// di_single_run
double di_single_run(SEXP x, SEXP y, SEXP n, SEXP uniformalize);
RcppExport SEXP _Test1_di_single_run(SEXP xSEXP, SEXP ySEXP, SEXP nSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type n(nSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(di_single_run(x, y, n, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// di_single_run_conditioned
double di_single_run_conditioned(SEXP x, SEXP y, SEXP z, SEXP n, SEXP uniformalize);
RcppExport SEXP _Test1_di_single_run_conditioned(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP nSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type z(zSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n(nSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(di_single_run_conditioned(x, y, z, n, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// rdi_many_runs
double rdi_many_runs(SEXP x, SEXP y, SEXP uniformalize);
RcppExport SEXP _Test1_rdi_many_runs(SEXP xSEXP, SEXP ySEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(rdi_many_runs(x, y, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// rdi_single_run
double rdi_single_run(SEXP x, SEXP y, SEXP d, SEXP uniformalize);
RcppExport SEXP _Test1_rdi_single_run(SEXP xSEXP, SEXP ySEXP, SEXP dSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type d(dSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(rdi_single_run(x, y, d, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// lmi_single_run
double lmi_single_run(SEXP x, SEXP y, SEXP delay, SEXP umi);
RcppExport SEXP _Test1_lmi_single_run(SEXP xSEXP, SEXP ySEXP, SEXP delaySEXP, SEXP umiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type delay(delaySEXP);
    Rcpp::traits::input_parameter< SEXP >::type umi(umiSEXP);
    rcpp_result_gen = Rcpp::wrap(lmi_single_run(x, y, delay, umi));
    return rcpp_result_gen;
END_RCPP
}
// lmi_multiple_run_cpp
double lmi_multiple_run_cpp(NumericMatrix& x, NumericMatrix& y, int d, IntegerVector run_vec, bool uniformalize);
RcppExport SEXP _Test1_lmi_multiple_run_cpp(SEXP xSEXP, SEXP ySEXP, SEXP dSEXP, SEXP run_vecSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(lmi_multiple_run_cpp(x, y, d, run_vec, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// lmi_multiple_run
double lmi_multiple_run(SEXP x, SEXP y, SEXP d, SEXP run_vec, SEXP umi);
RcppExport SEXP _Test1_lmi_multiple_run(SEXP xSEXP, SEXP ySEXP, SEXP dSEXP, SEXP run_vecSEXP, SEXP umiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type d(dSEXP);
    Rcpp::traits::input_parameter< SEXP >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< SEXP >::type umi(umiSEXP);
    rcpp_result_gen = Rcpp::wrap(lmi_multiple_run(x, y, d, run_vec, umi));
    return rcpp_result_gen;
END_RCPP
}
// rdi_single_run_conditioned
double rdi_single_run_conditioned(SEXP x, SEXP y, SEXP z, SEXP z_delays, SEXP d, SEXP uniformalize);
RcppExport SEXP _Test1_rdi_single_run_conditioned(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP z_delaysSEXP, SEXP dSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type z(zSEXP);
    Rcpp::traits::input_parameter< SEXP >::type z_delays(z_delaysSEXP);
    Rcpp::traits::input_parameter< SEXP >::type d(dSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(rdi_single_run_conditioned(x, y, z, z_delays, d, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// extract_max_rdi_value_delay
List extract_max_rdi_value_delay(NumericMatrix rdi_result, IntegerVector delays);
RcppExport SEXP _Test1_extract_max_rdi_value_delay(SEXP rdi_resultSEXP, SEXP delaysSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type rdi_result(rdi_resultSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delays(delaysSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_max_rdi_value_delay(rdi_result, delays));
    return rcpp_result_gen;
END_RCPP
}
// calculate_rdi_cpp
List calculate_rdi_cpp(NumericMatrix& expr_data, IntegerVector delays, IntegerMatrix& super_graph, IntegerVector& turning_points, int method, bool uniformalize);
RcppExport SEXP _Test1_calculate_rdi_cpp(SEXP expr_dataSEXP, SEXP delaysSEXP, SEXP super_graphSEXP, SEXP turning_pointsSEXP, SEXP methodSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delays(delaysSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix& >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type turning_points(turning_pointsSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< bool >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_rdi_cpp(expr_data, delays, super_graph, turning_points, method, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// calculate_rdi_cpp_wrap
List calculate_rdi_cpp_wrap(SEXP expr_data, SEXP delays, SEXP super_graph, SEXP turning_points, SEXP method, SEXP uniformalize);
RcppExport SEXP _Test1_calculate_rdi_cpp_wrap(SEXP expr_dataSEXP, SEXP delaysSEXP, SEXP super_graphSEXP, SEXP turning_pointsSEXP, SEXP methodSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< SEXP >::type delays(delaysSEXP);
    Rcpp::traits::input_parameter< SEXP >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< SEXP >::type turning_points(turning_pointsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type method(methodSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_rdi_cpp_wrap(expr_data, delays, super_graph, turning_points, method, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// extract_top_incoming_nodes_delays
List extract_top_incoming_nodes_delays(NumericMatrix max_rdi_value, IntegerMatrix max_rdi_delays, int k);
RcppExport SEXP _Test1_extract_top_incoming_nodes_delays(SEXP max_rdi_valueSEXP, SEXP max_rdi_delaysSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type max_rdi_value(max_rdi_valueSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type max_rdi_delays(max_rdi_delaysSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_top_incoming_nodes_delays(max_rdi_value, max_rdi_delays, k));
    return rcpp_result_gen;
END_RCPP
}
// calculate_conditioned_rdi_cpp_wrap
NumericMatrix calculate_conditioned_rdi_cpp_wrap(SEXP expr_data, SEXP super_graph, SEXP max_rdi_value, SEXP max_rdi_delays, SEXP k, SEXP uniformalize);
RcppExport SEXP _Test1_calculate_conditioned_rdi_cpp_wrap(SEXP expr_dataSEXP, SEXP super_graphSEXP, SEXP max_rdi_valueSEXP, SEXP max_rdi_delaysSEXP, SEXP kSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< SEXP >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_rdi_value(max_rdi_valueSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_rdi_delays(max_rdi_delaysSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_conditioned_rdi_cpp_wrap(expr_data, super_graph, max_rdi_value, max_rdi_delays, k, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// smooth_gene
NumericMatrix smooth_gene(NumericMatrix& expr_data, const int window_size);
RcppExport SEXP _Test1_smooth_gene(SEXP expr_dataSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< const int >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(smooth_gene(expr_data, window_size));
    return rcpp_result_gen;
END_RCPP
}
// rdi_multiple_run_cpp
double rdi_multiple_run_cpp(NumericMatrix& x, NumericMatrix& y, int d, IntegerVector run_vec, bool uniformalize);
RcppExport SEXP _Test1_rdi_multiple_run_cpp(SEXP xSEXP, SEXP ySEXP, SEXP dSEXP, SEXP run_vecSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(rdi_multiple_run_cpp(x, y, d, run_vec, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// calculate_rdi_multiple_run_cpp
List calculate_rdi_multiple_run_cpp(NumericMatrix& expr_data, IntegerVector delays, IntegerVector run_vec, IntegerMatrix& super_graph, IntegerVector turning_points, int method, bool uniformalize);
RcppExport SEXP _Test1_calculate_rdi_multiple_run_cpp(SEXP expr_dataSEXP, SEXP delaysSEXP, SEXP run_vecSEXP, SEXP super_graphSEXP, SEXP turning_pointsSEXP, SEXP methodSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type delays(delaysSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix& >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type turning_points(turning_pointsSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< bool >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_rdi_multiple_run_cpp(expr_data, delays, run_vec, super_graph, turning_points, method, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// calculate_rdi_multiple_run_cpp_wrap
List calculate_rdi_multiple_run_cpp_wrap(SEXP expr_data, SEXP delays, SEXP run_vec, SEXP super_graph, SEXP turning_points, SEXP method, SEXP uniformalize);
RcppExport SEXP _Test1_calculate_rdi_multiple_run_cpp_wrap(SEXP expr_dataSEXP, SEXP delaysSEXP, SEXP run_vecSEXP, SEXP super_graphSEXP, SEXP turning_pointsSEXP, SEXP methodSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< SEXP >::type delays(delaysSEXP);
    Rcpp::traits::input_parameter< SEXP >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< SEXP >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< SEXP >::type turning_points(turning_pointsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type method(methodSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_rdi_multiple_run_cpp_wrap(expr_data, delays, run_vec, super_graph, turning_points, method, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// rdi_multiple_runs_conditioned_cpp
double rdi_multiple_runs_conditioned_cpp(NumericMatrix& x, NumericMatrix& y, NumericMatrix& z, IntegerVector& z_delays, int d, IntegerVector run_vec, bool uniformalize);
RcppExport SEXP _Test1_rdi_multiple_runs_conditioned_cpp(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP z_delaysSEXP, SEXP dSEXP, SEXP run_vecSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type z_delays(z_delaysSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< bool >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(rdi_multiple_runs_conditioned_cpp(x, y, z, z_delays, d, run_vec, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// rdi_multiple_runs_conditioned
double rdi_multiple_runs_conditioned(SEXP x, SEXP y, SEXP z, SEXP z_delays, SEXP d, SEXP run_vec, SEXP uniformalize);
RcppExport SEXP _Test1_rdi_multiple_runs_conditioned(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP, SEXP z_delaysSEXP, SEXP dSEXP, SEXP run_vecSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    Rcpp::traits::input_parameter< SEXP >::type z(zSEXP);
    Rcpp::traits::input_parameter< SEXP >::type z_delays(z_delaysSEXP);
    Rcpp::traits::input_parameter< SEXP >::type d(dSEXP);
    Rcpp::traits::input_parameter< SEXP >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(rdi_multiple_runs_conditioned(x, y, z, z_delays, d, run_vec, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// calculate_conditioned_rdi_multiple_run_cpp
NumericMatrix calculate_conditioned_rdi_multiple_run_cpp(NumericMatrix& expr_data, IntegerMatrix& super_graph, NumericMatrix& max_rdi_value, IntegerMatrix& max_rdi_delays, IntegerVector run_vec, int k, bool uniformalize);
RcppExport SEXP _Test1_calculate_conditioned_rdi_multiple_run_cpp(SEXP expr_dataSEXP, SEXP super_graphSEXP, SEXP max_rdi_valueSEXP, SEXP max_rdi_delaysSEXP, SEXP run_vecSEXP, SEXP kSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix& >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type max_rdi_value(max_rdi_valueSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix& >::type max_rdi_delays(max_rdi_delaysSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< bool >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_conditioned_rdi_multiple_run_cpp(expr_data, super_graph, max_rdi_value, max_rdi_delays, run_vec, k, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// calculate_conditioned_rdi_multiple_run_wrap
NumericMatrix calculate_conditioned_rdi_multiple_run_wrap(SEXP expr_data, SEXP super_graph, SEXP max_rdi_value, SEXP max_rdi_delays, SEXP run_vec, SEXP k, SEXP uniformalize);
RcppExport SEXP _Test1_calculate_conditioned_rdi_multiple_run_wrap(SEXP expr_dataSEXP, SEXP super_graphSEXP, SEXP max_rdi_valueSEXP, SEXP max_rdi_delaysSEXP, SEXP run_vecSEXP, SEXP kSEXP, SEXP uniformalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< SEXP >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_rdi_value(max_rdi_valueSEXP);
    Rcpp::traits::input_parameter< SEXP >::type max_rdi_delays(max_rdi_delaysSEXP);
    Rcpp::traits::input_parameter< SEXP >::type run_vec(run_vecSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uniformalize(uniformalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_conditioned_rdi_multiple_run_wrap(expr_data, super_graph, max_rdi_value, max_rdi_delays, run_vec, k, uniformalize));
    return rcpp_result_gen;
END_RCPP
}
// calculate_umi_cpp
NumericMatrix calculate_umi_cpp(NumericMatrix& expr_data, IntegerMatrix& super_graph, int k, int method, int k_density, double bw);
RcppExport SEXP _Test1_calculate_umi_cpp(SEXP expr_dataSEXP, SEXP super_graphSEXP, SEXP kSEXP, SEXP methodSEXP, SEXP k_densitySEXP, SEXP bwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix& >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type k_density(k_densitySEXP);
    Rcpp::traits::input_parameter< double >::type bw(bwSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_umi_cpp(expr_data, super_graph, k, method, k_density, bw));
    return rcpp_result_gen;
END_RCPP
}
// calculate_umi_cpp_wrap
NumericMatrix calculate_umi_cpp_wrap(SEXP expr_data, SEXP super_graph, SEXP k, SEXP method, SEXP k_density, SEXP bw);
RcppExport SEXP _Test1_calculate_umi_cpp_wrap(SEXP expr_dataSEXP, SEXP super_graphSEXP, SEXP kSEXP, SEXP methodSEXP, SEXP k_densitySEXP, SEXP bwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type expr_data(expr_dataSEXP);
    Rcpp::traits::input_parameter< SEXP >::type super_graph(super_graphSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k(kSEXP);
    Rcpp::traits::input_parameter< SEXP >::type method(methodSEXP);
    Rcpp::traits::input_parameter< SEXP >::type k_density(k_densitySEXP);
    Rcpp::traits::input_parameter< SEXP >::type bw(bwSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_umi_cpp_wrap(expr_data, super_graph, k, method, k_density, bw));
    return rcpp_result_gen;
END_RCPP
}
